'Neos.DocsNeosIo:Document.AbstractPage':
  label: "${(node.context.inBackend ? (q(q(node).property('tags')).is('[title=Todo],[title=Draft]') ? ('[' + (q(q(node).property('tags')).is('[title=Todo]') ? 'TODO' : '') + (q(q(node).property('tags')).is('[title=Draft]') ? 'DRAFT' : '') + '] ') : '') : '') + String.cropAtWord(String.trim(String.stripTags(String.pregReplace(String.replace(q(node).property('title') || ((I18n.translate(node.nodeType.label) || node.nodeType.name) + (node.autoCreated ? ' (' + node.name + ')' : '')), '||', ''), '/<br\\W*?\\/?>|\\x{00a0}|[[^:print:]]|\\s+/u', ' '))), 100, '...')}"
  abstract: true
  superTypes:
    'Neos.Neos:Document': true
    'Neos.DocsNeosIo:Mixin.Taggable': true
    'Neos.DocsNeosIo:Mixin.MenuItem': true
  search:
    fulltext:
      isRoot: true
  childNodes:
    main:
      type: 'Neos.Neos:ContentCollection'
      constraints:
        nodeTypes:
          'Neos.DocsNeosIo:Constraint.Content.Restricted': false
  constraints:
    nodeTypes:
      'Neos.DocsNeosIo:Document.HomePage': false
      'Neos.DocsNeosIo:Constraint.Document.Restricted': false
  properties:
    title:
      ui:
        inline:
          editorOptions:
            hyphens: true
    subtitle:
      ui:
        inline:
          editorOptions:
            placeholder: 'Enter subtitle here...'
      options:
        silhouette: 'neos.text.plain'
      search:
        fulltextExtractor: '${Indexing.extractInto("h2", value)}'
    tags:
      ui:
        inspector:
          group: 'document'
